.App {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 20px;
    font-family: Arial, sans-serif;
}

h1 {
    margin-bottom: 20px;
}

.controls {
    display: flex;
    margin-bottom: 20px;
}

.controls button {
    margin-right: 10px;
    padding: 5px 10px;
    border: none;
    border-radius: 5px;
    background-color: darkslategray;
    color: white;
    cursor: pointer;
}

.controls button:hover {
    background-color: darkslategrey;
}

.controls select,
.controls input[type="color"] {
    margin-right: 10px;
    padding: 5px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.controls select:focus,
.controls input[type="color"]:focus {
    outline: none;
    border-color: #007bff;
}

textarea {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
    resize: vertical;
}

textarea:focus {
    outline: none;
    border-color: cadetblue;
}
// server.js (backend)

const express = require('express');
const http = require('http');
const socketIo = require('socket.io');
const cors = require('cors');

const app = express();
app.use(cors());

const server = http.createServer(app);
const io = socketIo(server, {
    cors: {
        origin: '*',
        methods: ['GET', 'POST'],
        credentials: true
    }
});     
io.on('connection', (socket) => {
    console.log('New client connected');
    socket.on('edit', (content) => {
        io.emit('updateContent', content);
    });

    socket.on('bold', (bold) => {
        io.emit('updateStyleBold', bold);
    })

    socket.on('italic', (italic) => {
        io.emit('updateStyleItalic', italic);
    })

    socket.on('underline', (underline) => {
        io.emit('updateStyleUnderline', underline);
    })

    socket.on('disconnect', () => {
        console.log('Client disconnected');
    });
});

const PORT = 5000;
server.listen(PORT, () => console.log(`Server running on port ${PORT}`));

